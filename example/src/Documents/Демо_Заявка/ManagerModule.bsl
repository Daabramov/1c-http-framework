// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область АПИ

// В формат.
// 
// Параметры:
//  Ссылка - ДокументСсылка.Демо_Заявка
//  Данные - см. НовыеДанные
//  Кеш - Структура - Кеш
// 
// Возвращаемое значение:
//  см. СхемаОтветаАПИ
Функция ВФормат(Ссылка, Данные = Неопределено, Кеш = Неопределено) Экспорт
	
	ЛокальныйКеш = Кеширование.ЛокальныйКеш(Кеш, "Формат_Демо_Заявка");
	Если ЛокальныйКеш <> Неопределено И Кеширование.ЗначениеИзКеша(Ссылка, ЛокальныйКеш) <> Неопределено Тогда
		Возврат Кеширование.ЗначениеИзКеша(Ссылка, ЛокальныйКеш);	
	КонецЕсли;
	
	//	Здесь уже можно заполнять при наличии БСП удобнее
	//  Реквизиты = ОбщегоНазначения.ЗначенияРеквизитов() 
	Если Данные = Неопределено Тогда
		Реквизиты = НовыеДанные();
		ЗаполнитьЗначенияСвойств(Реквизиты, Ссылка);
		Сообщения = СообщенияЗапросов(ОбщегоНазначенияХТТП.ЗначениеВМассиве(Ссылка)).Получить(Ссылка); // Массив
		Реквизиты.Сообщения = Сообщения;
	Иначе
		Реквизиты = Данные;
	КонецЕсли;
	
	Результат = СхемаОтветаАПИ();
	Результат.date = Реквизиты.Дата;
	Результат.topic = Реквизиты.Тема;
	Результат.project = Справочники.Демо_Проекты.ВФормат(Реквизиты.Проект, , Кеш);
	Результат.urgent = Реквизиты.Срочный;
	//@skip-check invocation-parameter-type-intersect
	Результат.Вставить(
		"messages",
		ПроцессорыКоллекций.ИзКоллекции(Сообщения).Обработать("Результат = XMLСтрока(Элемент)").ВМассив()
	);
	
	Кеширование.ПоместитьЗначениеВКеш(Новый ФиксированнаяСтруктура(Результат), Ссылка, ЛокальныйКеш);
	
	Возврат Результат;
	
КонецФункции

// Новые данные.
// 
// Возвращаемое значение:
//  Структура - Новые данные:
// * Дата - Дата,Неопределено
// * Тема - Строка
// * Проект - СправочникСсылка.Демо_Проекты
// * Срочный - Булево
// * Сообщения - Массив
Функция НовыеДанные() Экспорт
	НовыеДанные = Новый Структура();
	НовыеДанные.Вставить("Дата", Неопределено);
	НовыеДанные.Вставить("Тема", "");
	НовыеДанные.Вставить("Проект", Справочники.Демо_Проекты.ПустаяСсылка());
	НовыеДанные.Вставить("Срочный", Ложь);
	НовыеДанные.Вставить("Сообщения", Новый Массив());
	
	Возврат НовыеДанные;
КонецФункции

// Схема ответа АПИ.
// 
// Возвращаемое значение:
//  Структура - Схема ответа АПИ:
// * date - Дата
// * topic - Строка
// * project - см. Справочники.Демо_Проекты.СхемаОтветаАПИ
// * urgent - Булево
// * messages - Массив из Строка
Функция СхемаОтветаАПИ() Экспорт
	
	Схема = Новый Структура();
	Схема.Вставить("date");
	Схема.Вставить("topic");
	Схема.Вставить("project");
	Схема.Вставить("urgent");
	Схема.Вставить("messages");
	
	//@skip-check constructor-function-return-section
	Возврат Схема;
	
КонецФункции

// см. ВосстановлениеXDTO.НовыеПараметрыВосстановления
Функция ФункцииВосстановления() Экспорт
	
	ПараметрыВосстановления = ВосстановлениеXDTO.НовыеПараметрыВосстановления();
	Строка = ПараметрыВосстановления.Добавить();
	Строка.СвойствоИсходное = "project_id";
	Строка.ИмяСвойства = "Проект";
	Строка.ФункцияВосстановленияЗначения = "Демо_ФункцииВосстановления.ВосстановитьПроект";

	Строка = ПараметрыВосстановления.Добавить();
	Строка.СвойствоИсходное = "subject";
	Строка.ИмяСвойства = "Тема";

	Строка = ПараметрыВосстановления.Добавить();
	Строка.СвойствоИсходное = "message";
	Строка.ИмяСвойства = "Сообщение";

	Строка = ПараметрыВосстановления.Добавить();
	Строка.СвойствоИсходное = "urgent";
	Строка.ИмяСвойства = "Срочный";
	
	Строка = ПараметрыВосстановления.Добавить();
	Строка.СвойствоИсходное = "date";
	Строка.ИмяСвойства = "Дата";
	
	ОбщегоНазначенияХТТП.ДополнитьТаблицу(ПараметрыВосстановления, Документы.Демо_Сообщение.ФункцииВосстановления());
	
	Возврат ПараметрыВосстановления;

КонецФункции

#КонецОбласти

// Сообщения запросов.
// 
// Параметры:
//  Запросы - Массив из ДокументСсылка.Демо_Заявка
// 
// Возвращаемое значение:
//  Соответствие - Сообщения запросов
Функция СообщенияЗапросов(Запросы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Демо_Запрос.Ссылка КАК Заявка,
	|	Демо_Сообщение.Ссылка КАК Сообщение
	|ИЗ
	|	Документ.Демо_Сообщение КАК Демо_Сообщение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Демо_Заявка КАК Демо_Запрос
	|		ПО Демо_Сообщение.Запрос = Демо_Запрос.Ссылка
	|ГДЕ
	|	Демо_Запрос.Ссылка В (&Запросы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Демо_Сообщение.МоментВремени
	|ИТОГИ
	|ПО
	|	Заявка";
	
	Запрос.УстановитьПараметр("Запросы", Запросы);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапрос = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Результат = Новый Соответствие();
	Пока ВыборкаЗапрос.Следующий() Цикл
		ВыборкаДетальныеЗаписи = ВыборкаЗапрос.Выбрать();
		Сообщения = Новый Массив();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщения.Добавить(ВыборкаДетальныеЗаписи.Сообщение);
		КонецЦикла;
		Результат.Вставить(ВыборкаДетальныеЗаписи.Заявка, Сообщения);
	КонецЦикла;
	
	Возврат Результат;	
	
КонецФункции

#КонецОбласти

#КонецЕсли
